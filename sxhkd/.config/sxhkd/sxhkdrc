#!/usr/bin/env sh

#
# Programs
#

# program launcher
super + {_,shift} + p
  rofi -show {drun, window} -show-icons
# terminal emulator
super + o ; Return
  kitty
# Launch program
super + o ; t
  tdrop -m -h 33% -w 45% -x 1% -y 5% -n 1000 -a kitty
# Ranger
super + o ; r
  tdrop -m -h 33% -w 45% -x 54% -y 5% -n 2000 -a -f '-e ranger' kitty
# Htop
super + o ; h
  tdrop -m -h 33% -w 45% -x 1% -y 66% -n 3000 -a -f '-e htop' kitty
# Volume
super + o ; v
  tdrop -m -h 33% -w 45% -x 54% -y 66% -n 4000 -a -f '-e pulsemixer' kitty
# Browser
super + o ; b ; f
  firefox
super + o ; b ; b
  brave-dev --disable-frame-rate-limit
super + o ; b ; q
  qutebrowser --qt-flag ignore-gpu-blacklist --qt-flag enable-gpu-rasterization --qt-flag enable-native-gpu-memory-buffers --qt-flag num-raster-threads=4 --qt-flag enable-oop-rasterization
# n64 games :)
super + o ; g ; e
  ~/.config/emulation/rofi_roms.sh 
# Bitwarden rofi, autolock after 1hour
super + o ; p 
  bwmenu --auto-lock 86400
# Emacs client
super + o ; c ; c
  emacsclient -s nondoom -c
# Emacs nonclient
super + o; c ; n
  emacs --with-profile nondoom
# Emacs server
super + o; c ; s
  emacs --with-profile nondoom --daemon=nondoom
# Agenda
# Work
super + o; a ; w
  ~/.config/bspwm/bspwmfloat.sh emacsclient -s nondoom -e "(org-agenda-open-work)"
# Personall
super + o; a ; p
  ~/.config/bspwm/bspwmfloat.sh emacsclient -s nondoom -e "(org-agenda-open-personal)"
# Todos
super + o; a ; t
  ~/.config/bspwm/bspwmfloat.sh emacsclient -s nondoom -e "(org-agenda-open-todos)"
# Select monitor layout
super + o; m
  ~/.config/bspwm/mons.sh select

#
# bspwm hotkeys
#

# make sxhkd reload its configuration files:
super + Escape
    pkill -USR1 -x sxhkd

super + alt + {_,shift + }{1-9,0}
    bspc {desktop -f, window -d} $(bspc query -M -m)/{a,b,c}


# Restart/quit bspwm
super + alt + {_, shift} + Escape
    bspc {wm -r, quit}

# close and kill
super + {_,shift + }w
    bspc node -{c,k}

# alternate between the tiled and monocle layout
super + z
    bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
    bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
    bspc node -s biggest

# Swap the current node with preselected node
super + s
    bspc node -n 'newest.!automatic.local'

#
# state/flags
#

# set the window state
super + {t, shift + t, shift + f, f}
    bspc node -t {tiled, psuedo_tiled, floating, fullscreen}

# set the node flags {marked,locked,sticy,private}
super + ctrl + {k,x,y,z}
    bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction, or an empty monitor
# src: https://www.reddit.com/r/bspwm/comments/jpiopk/focusing_empty_monitor_with_a_keybind/
super + {m,n,e,i}
    dir={west,south,north,east}; bspc node "$dir" -f || bspc monitor "$dir" -f

super + {Left,Down,Up,Right}
    dir={west,south,north,east}; bspc node "$dir" -f || bspc monitor "$dir" -f

# Swap a node in the given direction. If across a monitor, simply move it to that monitor
super + shift + {m,n,e,i}
	dir={west,south,north,east}; \
	bspc node -s "$dir.local" --follow \
	    || bspc node -m "$dir" --follow

super + shift + {Left,Down,Up,Right}
	dir={west,south,north,east}; \
	bspc node -s "$dir.local" --follow \
	    || bspc node -m "$dir" --follow

# focus the node for the given path jump
# super + {p,b,comma,per od}
#     bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }Tab
    bspc node -f {next,prev}.local.leaf

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
    bspc desktop -f {prev,next}.local.leaf

# focus the last node/desktop
# super + {grave,Tab}
    # bspc {node,desktop} -f last

# focus the older or newer node in the focus history
# super + {o,i}
#     bspc wm -h off; \
#     bspc node {older,newer} -f; \
#     bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} 'focused:^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {m,n,e,i}
    bspc node -p {west,south,north,east}

super + ctrl + {Left,Down,Up,Right}
    bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
    bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
    bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
    bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# rotate tree clock/c.clock-wise
super + {r,R}
  bspc node @/ -R {90,-90}

# expand a window by moving one of its side outward
super + alt + {m,n,e,i}
    bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

super + alt + {Left,Down,Up,Right}
    bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {m,n,e,i}
    bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

super + alt + shift + {Left,Down,Up,Right}
    bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
# super + {Left,Down,Up,Right}
#     bspc node -v {-20 0,0 20,0 -20,20 0}

#
# Media controls
#

XF86Audio{Play,Stop,Next,Prev}
  playerctl {play-pause,stop,next,previous} -p spotify

XF86AudioMute
  pactl set-sink-mute 1 toggle

XF86Audio{Lower,Raise}Volume
  pactl set-sink-volume 1 {-,+}5%

# Screenshot utility: +shift for save
super + {_, shift} + Print
  xfce4-screenshooter {-r,-c -r}

# Lock
super + o ; l
  betterlockscreen -l

# Brightness
XF86MonBrightnessDown
	xbacklight -dec 10
XF86MonBrightnessUp
	xbacklight -inc 10

#
# UI
#

# inc/dec gap
super + {plus, minus}
  ~/.config/sxhkd/scripts/{gap_inc,gap_dec}.sh

# inc/dec border
super + shift + {plus, minus}
  ~/.config/sxhkd/scripts/{border_inc,border_dec}.sh

